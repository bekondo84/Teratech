/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.megatim.common.clients;

import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.ImageIcon;

/**
 *
 * @author DEV
 */
public class Succes extends javax.swing.JDialog {

    /**
     * Creates new form Succes
     */
    public Succes(java.awt.Frame parent, boolean modal, NotificationType typenotification, String message) {
        super(parent, modal);
        initComponents();
        buildviews();
        this.message.setText(message);
        this.btok.setFocusable(true);
        this.btok.requestFocus();
        this.setTitle(typenotification.toString());
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btok = new javax.swing.JToggleButton();
        message = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btok.setText("OK");
        btok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btokActionPerformed(evt);
            }
        });

        message.setFont(new java.awt.Font(CommonsUtilities.POLICE_APPLICATION, 1, 12)); // NOI18N
        message.setForeground(new java.awt.Color(0, 153, 51));
        message.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        message.setText("   Opération effectuée avec succès !!!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btok, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btokActionPerformed
        succes();
    }//GEN-LAST:event_btokActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btok;
    private javax.swing.JLabel message;
    // End of variables declaration//GEN-END:variables

    private void buildviews() {
        message.setIcon(new ImageIcon(ClassLoader.getSystemResource("com/megatim/tools/images/successs.png")));
        this.setIconImage((new ImageIcon(ClassLoader.getSystemResource("com/megatim/tools/images/successs.png"))).getImage());
        btok.setFocusable(true);
        btok.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    succes();
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    succes();
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {

            }

        });
    }

    public static void getSuccessDialog(Frame parent, boolean modal, NotificationType typenotification, String message) {
        Succes succes = new Succes(parent, true, typenotification, message);
        succes.setModal(modal);
        succes.setLocationRelativeTo(parent);
        succes.setVisible(true);
    }

    private void succes() {
        this.dispose();
    }

}
